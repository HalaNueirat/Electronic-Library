// <auto-generated />
using Electronic_Library1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Electronic_Library1.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230201153103_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Electronic_Library1.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Ernest Hemingway",
                            EmployeeId = 1,
                            Price = 20,
                            Title = "The Old Man And The Sea"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "J.K Rowling",
                            EmployeeId = 2,
                            Price = 40,
                            Title = "Harry Potter"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Lois Lowry",
                            EmployeeId = 3,
                            Price = 30,
                            Title = "The Giver"
                        });
                });

            modelBuilder.Entity("Electronic_Library1.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("BookId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            BookId = 1,
                            Name = "Hala Nairat",
                            Password = "123"
                        },
                        new
                        {
                            CustomerId = 2,
                            BookId = 2,
                            Name = "Ola Alawna",
                            Password = "234"
                        },
                        new
                        {
                            CustomerId = 3,
                            BookId = 3,
                            Name = "Aya Almoghayir",
                            Password = "456"
                        });
                });

            modelBuilder.Entity("Electronic_Library1.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Name = "Ruba Hardan",
                            Password = "111",
                            Salary = 2000
                        },
                        new
                        {
                            EmployeeId = 2,
                            Name = "Hajar Draghma",
                            Password = "222",
                            Salary = 2000
                        },
                        new
                        {
                            EmployeeId = 3,
                            Name = "Sara Salama",
                            Password = "333",
                            Salary = 2000
                        });
                });

            modelBuilder.Entity("Electronic_Library1.Models.Book", b =>
                {
                    b.HasOne("Electronic_Library1.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Electronic_Library1.Models.Customer", b =>
                {
                    b.HasOne("Electronic_Library1.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
